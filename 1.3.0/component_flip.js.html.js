tui.util.defineNamespace("fedoc.content", {});
fedoc.content["component_flip.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n * @fileoverview Image flip module\n */\n'use strict';\n\nvar Component = require('../interface/Component');\nvar consts = require('../consts');\n\n/**\n * Flip\n * @class Flip\n * @param {Component} parent - parent component\n * @extends {Component}\n */\nvar Flip = tui.util.defineClass(Component, /** @lends Flip.prototype */{\n    init: function(parent) {\n        this.setParent(parent);\n    },\n\n    /**\n     * Component name\n     * @type {string}\n     */\n    name: consts.componentNames.FLIP,\n\n    /**\n     * Get current flip settings\n     * @returns {{flipX: Boolean, flipY: Boolean}}\n     */\n    getCurrentSetting: function() {\n        var canvasImage = this.getCanvasImage();\n\n        return {\n            flipX: canvasImage.flipX,\n            flipY: canvasImage.flipY\n        };\n    },\n\n    /**\n     * Set flipX, flipY\n     * @param {{flipX: Boolean, flipY: Boolean}} newSetting - Flip setting\n     * @returns {jQuery.Deferred}\n     */\n    set: function(newSetting) {\n        var setting = this.getCurrentSetting();\n        var jqDefer = $.Deferred();\n        var isChangingFlipX = (setting.flipX !== newSetting.flipX);\n        var isChangingFlipY = (setting.flipY !== newSetting.flipY);\n\n        if (!isChangingFlipX &amp;&amp; !isChangingFlipY) {\n            return jqDefer.reject();\n        }\n\n        tui.util.extend(setting, newSetting);\n        this.setImageProperties(setting, true);\n        this._invertAngle(isChangingFlipX, isChangingFlipY);\n        this._flipObjects(isChangingFlipX, isChangingFlipY);\n\n        return jqDefer.resolve(setting, this.getCanvasImage().angle);\n    },\n\n    /**\n     * Invert image angle for flip\n     * @param {boolean} isChangingFlipX - Change flipX\n     * @param {boolean} isChangingFlipY - Change flipY\n     */\n    _invertAngle: function(isChangingFlipX, isChangingFlipY) {\n        var canvasImage = this.getCanvasImage();\n        var angle = canvasImage.angle;\n\n        if (isChangingFlipX) {\n            angle *= -1;\n        }\n        if (isChangingFlipY) {\n            angle *= -1;\n        }\n        canvasImage.setAngle(parseFloat(angle)).setCoords();// parseFloat for -0 to 0\n    },\n\n    /**\n     * Flip objects\n     * @param {boolean} isChangingFlipX - Change flipX\n     * @param {boolean} isChangingFlipY - Change flipY\n     * @private\n     */\n    _flipObjects: function(isChangingFlipX, isChangingFlipY) {\n        var canvas = this.getCanvas();\n\n        if (isChangingFlipX) {\n            canvas.forEachObject(function(obj) {\n                obj.set({\n                    angle: parseFloat(obj.angle * -1), // parseFloat for -0 to 0\n                    flipX: !obj.flipX,\n                    left: canvas.width - obj.left\n                }).setCoords();\n            });\n        }\n        if (isChangingFlipY) {\n            canvas.forEachObject(function(obj) {\n                obj.set({\n                    angle: parseFloat(obj.angle * -1), // parseFloat for -0 to 0\n                    flipY: !obj.flipY,\n                    top: canvas.height - obj.top\n                }).setCoords();\n            });\n        }\n        canvas.renderAll();\n    },\n\n    /**\n     * Reset flip settings\n     * @returns {jQuery.Deferred}\n     */\n    reset: function() {\n        return this.set({\n            flipX: false,\n            flipY: false\n        });\n    },\n\n    /**\n     * Flip x\n     * @returns {jQuery.Deferred}\n     */\n    flipX: function() {\n        var current = this.getCurrentSetting();\n\n        return this.set({\n            flipX: !current.flipX,\n            flipY: current.flipY\n        });\n    },\n\n    /**\n     * Flip y\n     * @returns {jQuery.Deferred}\n     */\n    flipY: function() {\n        var current = this.getCurrentSetting();\n\n        return this.set({\n            flipX: current.flipX,\n            flipY: !current.flipY\n        });\n    }\n});\n\nmodule.exports = Flip;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"