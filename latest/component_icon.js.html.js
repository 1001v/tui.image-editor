tui.util.defineNamespace("fedoc.content", {});
fedoc.content["component_icon.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n * @fileoverview Add icon module\n */\n'use strict';\n\nvar Component = require('../interface/component');\nvar consts = require('../consts');\n\nvar pathMap = {\n    arrow: 'M 0 90 H 105 V 120 L 160 60 L 105 0 V 30 H 0 Z',\n    cancel: 'M 0 30 L 30 60 L 0 90 L 30 120 L 60 90 L 90 120 L 120 90 ' +\n            'L 90 60 L 120 30 L 90 0 L 60 30 L 30 0 Z'\n};\n\n/**\n * Icon\n * @class Icon\n * @param {Component} parent - parent component\n * @extends {Component}\n */\nvar Icon = tui.util.defineClass(Component, /** @lends Icon.prototype */{\n    init: function(parent) {\n        this.setParent(parent);\n\n        /**\n         * Default icon color\n         * @type {string}\n         */\n        this._oColor = '#000000';\n\n        /**\n         * Path value of each icon type\n         * @type {object}\n         */\n        this._pathMap = pathMap;\n    },\n\n    /**\n     * Component name\n     * @type {string}\n     */\n    name: consts.componentNames.ICON,\n\n    /**\n     * Add icon\n     * @param {string} type - Icon type\n     */\n    add: function(type) {\n        var canvas = this.getCanvas();\n        var centerPos = this.getCanvasImage().getCenterPoint();\n        var path = this._pathMap[type];\n        var icon;\n\n        if (!path) {\n            return;\n        }\n\n        icon = this._createIcon(path);\n\n        icon.set(consts.fObjectOptions.SELECTION_STYLE);\n        icon.set({\n            fill: this._oColor,\n            left: centerPos.x,\n            top: centerPos.y,\n            type: 'icon'\n        });\n\n        canvas.add(icon).setActiveObject(icon);\n    },\n\n    /**\n     * Register icon paths\n     * @param {{key: string, value: string}} pathInfos - Path infos\n     */\n    registerPaths: function(pathInfos) {\n        tui.util.forEach(pathInfos, function(path, type) {\n            this._pathMap[type] = path;\n        }, this);\n    },\n\n    /**\n     * Set icon object color\n     * @param {strign} color - Color to set\n     * @param {fabric.Path}[obj] - Current activated path object\n     */\n    setColor: function(color, obj) {\n        this._oColor = color;\n\n        if (obj &amp;&amp; obj.get('type') === 'icon') {\n            obj.setFill(this._oColor);\n            this.getCanvas().renderAll();\n        }\n    },\n\n    /**\n     * Create icon object\n     * @param {string} path - Path value to create icon\n     * @returns {fabric.Path} Path object\n     */\n    _createIcon: function(path) {\n        return new fabric.Path(path);\n    }\n});\n\nmodule.exports = Icon;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"